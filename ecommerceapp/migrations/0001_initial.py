# Generated by Django 5.2.7 on 2025-10-19 05:17

import django.db.models.deletion
import django.utils.timezone
import ecommerceapp.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=140, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog/categories/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('hex', models.CharField(blank=True, max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='GoldPriceSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(default='manual', max_length=50)),
                ('price_aed_per_g', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SpecialOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=120)),
                ('subtitle', models.CharField(blank=True, max_length=160)),
                ('percentage', models.PositiveSmallIntegerField(default=0)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models.offer_upload)),
                ('badge', models.CharField(blank=True, default='LIMITED TIME', max_length=60)),
                ('cta_label', models.CharField(blank=True, default='Shop Now', max_length=40)),
                ('cta_url', models.CharField(blank=True, max_length=300)),
                ('query_params', models.JSONField(blank=True, default=dict)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['sort_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=160, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models.store_upload)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('address1', models.CharField(blank=True, max_length=200)),
                ('address2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=80)),
                ('state', models.CharField(blank=True, max_length=80)),
                ('postcode', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='India', max_length=60)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_vendor', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AwardRecognition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('year', models.CharField(blank=True, max_length=10)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('Industry Recognition', 'Industry Recognition'), ('Sustainability', 'Sustainability'), ('Social Impact', 'Social Impact'), ('Customer Excellence', 'Customer Excellence'), ('Innovation', 'Innovation'), ('Quality', 'Quality')], default='Industry Recognition', max_length=64)),
                ('emblem', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models._upload_awards)),
                ('is_active', models.BooleanField(default=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'sort'], name='ecommerceap_is_acti_4a5047_idx')],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=240, unique=True)),
                ('excerpt', models.TextField(blank=True)),
                ('content_markdown', models.TextField(blank=True)),
                ('content_html', models.TextField(blank=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='blog/covers/')),
                ('tags_csv', models.CharField(blank=True, help_text='Comma separated tags', max_length=600)),
                ('featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='ecommerceapp.blogcategory')),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPostVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('excerpt', models.TextField(blank=True)),
                ('content_markdown', models.TextField(blank=True)),
                ('content_html', models.TextField(blank=True)),
                ('tags_csv', models.CharField(blank=True, max_length=600)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_edits', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='ecommerceapp.blogpost')),
            ],
            options={
                'ordering': ['-version', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checked_out', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models.cat_upload)),
                ('icon', models.CharField(blank=True, max_length=60)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ecommerceapp.category')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('authority', models.CharField(blank=True, max_length=200)),
                ('valid_until', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'sort'], name='ecommerceap_is_acti_1fb74e_idx')],
            },
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('page_url', models.CharField(blank=True, max_length=512)),
                ('handled', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Farming & Agriculture', 'Farming & Agriculture'), ('Events & Workshops', 'Events & Workshops'), ('Certifications', 'Certifications'), ('Community Impact', 'Community Impact')], max_length=64)),
                ('image', models.ImageField(upload_to=ecommerceapp.models._upload_gallery)),
                ('title', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('date_label', models.CharField(blank=True, max_length=64)),
                ('description', models.TextField(blank=True)),
                ('attendees', models.CharField(blank=True, max_length=64)),
                ('is_active', models.BooleanField(default=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'sort', '-created_at'],
                'indexes': [models.Index(fields=['category', 'is_active', 'sort'], name='ecommerceap_categor_e4c39d_idx')],
            },
        ),
        migrations.CreateModel(
            name='JobOpening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=160)),
                ('department', models.CharField(blank=True, max_length=120)),
                ('location', models.CharField(blank=True, max_length=120)),
                ('employment_type', models.CharField(choices=[('full-time', 'Full-time'), ('part-time', 'Part-time'), ('contract', 'Contract'), ('intern', 'Intern')], default='full-time', max_length=20)),
                ('salary_text', models.CharField(blank=True, max_length=120)),
                ('description', models.TextField()),
                ('requirements', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('posted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('apply_email', models.EmailField(blank=True, max_length=254)),
                ('apply_url', models.URLField(blank=True)),
            ],
            options={
                'ordering': ['-posted_at', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'posted_at'], name='ecommerceap_is_acti_b99240_idx')],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('cover_letter', models.TextField(blank=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to=ecommerceapp.models.resume_upload)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('rejected', 'Rejected'), ('hired', 'Hired')], db_index=True, default='submitted', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='ecommerceapp.jobopening')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=30)),
                ('shipment_status', models.CharField(choices=[('placed', 'Placed'), ('pending', 'Pending'), ('processing', 'Processing'), ('delivered', 'Delivered')], default='pending', max_length=20)),
                ('country_code', models.CharField(default='IN', max_length=2)),
                ('currency', models.CharField(default='INR', max_length=8)),
                ('cart', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='ecommerceapp.cart')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderCheckoutDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('address1', models.CharField(max_length=200)),
                ('address2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=80)),
                ('state', models.CharField(blank=True, max_length=80)),
                ('postcode', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='India', max_length=60)),
                ('notes', models.TextField(blank=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkout_details', to='ecommerceapp.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(choices=[('card', 'Card'), ('bank-transfer', 'Bank Transfer'), ('cash-on-delivery', 'Cash on Delivery')], max_length=30)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=120)),
                ('currency', models.CharField(default='INR', max_length=12)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('raw', models.JSONField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='ecommerceapp.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=160)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('grade', models.CharField(blank=True, max_length=50)),
                ('manufacture_date', models.DateField(blank=True, null=True)),
                ('origin_country', models.CharField(blank=True, default='IN', max_length=60)),
                ('warranty_months', models.PositiveIntegerField(default=0)),
                ('price_inr', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('price_usd', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('aed_pricing_mode', models.CharField(choices=[('STATIC', 'Static'), ('GOLD', 'Gold-Linked')], default='STATIC', max_length=12)),
                ('price_aed_static', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('gold_weight_g', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=10, null=True)),
                ('gold_making_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('gold_markup_percent', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('discount_percent', models.PositiveIntegerField(default=0)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('new_arrival', models.BooleanField(default=False)),
                ('limited_stock', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('ingredients', models.TextField(blank=True)),
                ('allergens', models.CharField(blank=True, max_length=200)),
                ('nutrition_facts', models.JSONField(blank=True, default=dict)),
                ('nutrition_notes', models.TextField(blank=True)),
                ('hot_deal', models.BooleanField(default=False)),
                ('hot_deal_ends_at', models.DateTimeField(blank=True, null=True)),
                ('default_uom', models.CharField(choices=[('PCS', 'Pieces'), ('G', 'Grams'), ('KG', 'Kilograms'), ('ML', 'Milliliters'), ('L', 'Liters'), ('BUNDLE', 'Bundle / Pack')], default='KG', max_length=10)),
                ('default_pack_qty', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('is_organic', models.BooleanField(default=False)),
                ('is_perishable', models.BooleanField(default=True)),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, null=True)),
                ('hsn_sac', models.CharField(blank=True, max_length=12)),
                ('gst_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('mrp_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('is_published', models.BooleanField(db_index=True, default=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('carts_count', models.PositiveIntegerField(default=0)),
                ('sold_count', models.PositiveIntegerField(default=0)),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('rating_avg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('wishes_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='ecommerceapp.category')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='ecommerceapp.store')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=160)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('query', models.JSONField(blank=True, default=dict)),
                ('default_limit', models.PositiveIntegerField(default=12)),
                ('default_order', models.CharField(default='-created_at', max_length=40)),
                ('is_active', models.BooleanField(default=True)),
                ('products', models.ManyToManyField(blank=True, to='ecommerceapp.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductGrid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=120)),
                ('subtitle', models.CharField(blank=True, max_length=200)),
                ('price_text', models.CharField(blank=True, max_length=60)),
                ('original_price_text', models.CharField(blank=True, max_length=60)),
                ('badge', models.CharField(blank=True, max_length=80)),
                ('discount_text', models.CharField(blank=True, max_length=60)),
                ('image', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models.prod_upload)),
                ('image_url', models.URLField(blank=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grid_items', to='ecommerceapp.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to=ecommerceapp.models.prod_upload)),
                ('is_primary', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ecommerceapp.product')),
            ],
            options={
                'verbose_name_plural': 'product images',
            },
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='ecommerceapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOptionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=80)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='ecommerceapp.productoption')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_name', models.CharField(blank=True, max_length=150)),
                ('user_email', models.EmailField(blank=True, max_length=254)),
                ('rating', models.PositiveSmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=200)),
                ('body', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='ecommerceapp.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.CharField(blank=True, max_length=80)),
                ('name', models.CharField(max_length=120)),
                ('value', models.CharField(max_length=300)),
                ('unit', models.CharField(blank=True, max_length=40)),
                ('is_highlight', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='ecommerceapp.product')),
            ],
            options={
                'ordering': ['sort_order', 'group', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sku', models.CharField(max_length=64, unique=True)),
                ('attributes', models.JSONField(blank=True, default=dict)),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_override', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('weight_value', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('weight_unit', models.CharField(blank=True, choices=[('PCS', 'Pieces'), ('G', 'Grams'), ('KG', 'Kilograms'), ('ML', 'Milliliters'), ('L', 'Liters'), ('BUNDLE', 'Bundle / Pack')], max_length=10, null=True)),
                ('mrp', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('barcode', models.CharField(blank=True, max_length=64)),
                ('min_order_qty', models.PositiveIntegerField(default=1)),
                ('step_qty', models.PositiveIntegerField(default=1)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variants', to='ecommerceapp.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='ecommerceapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='ecommerceapp.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecommerceapp.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ecommerceapp.productvariant')),
            ],
        ),
        migrations.CreateModel(
            name='PromoBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('placement', models.CharField(choices=[('top', 'Top'), ('bottom', 'Bottom')], db_index=True, default='top', max_length=10)),
                ('variant', models.CharField(choices=[('default', 'Default'), ('coupon', 'Coupon'), ('clearance', 'Clearance')], db_index=True, default='default', max_length=20)),
                ('title', models.CharField(max_length=120)),
                ('subtitle', models.CharField(blank=True, max_length=200)),
                ('badge', models.CharField(blank=True, max_length=80)),
                ('button_text', models.CharField(blank=True, default='Shop Now', max_length=40)),
                ('cta_url', models.CharField(blank=True, max_length=300)),
                ('image', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models.promo_upload)),
                ('image_url', models.URLField(blank=True)),
                ('class_name', models.CharField(blank=True, max_length=300)),
                ('overlay_class', models.CharField(blank=True, max_length=300)),
                ('is_wide', models.BooleanField(default=False)),
                ('coupon_code', models.CharField(blank=True, max_length=40)),
                ('coupon_text', models.CharField(blank=True, max_length=160)),
                ('offer_text', models.CharField(blank=True, max_length=160)),
                ('main_offer', models.CharField(blank=True, max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
            ],
            options={
                'ordering': ['sort', '-created_at'],
                'indexes': [models.Index(fields=['placement', 'variant'], name='ecommerceap_placeme_589030_idx'), models.Index(fields=['is_active'], name='ecommerceap_is_acti_d7e815_idx'), models.Index(fields=['starts_at', 'ends_at'], name='ecommerceap_starts__a87a2a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('location', models.CharField(blank=True, max_length=150)),
                ('rating', models.PositiveSmallIntegerField(default=5)),
                ('testimonial', models.TextField()),
                ('product', models.CharField(blank=True, max_length=150)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=ecommerceapp.models._upload_testimonials)),
                ('verified', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'sort'], name='ecommerceap_is_acti_509ab1_idx')],
            },
        ),
        migrations.CreateModel(
            name='VariantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to=ecommerceapp.models.prod_upload)),
                ('is_primary', models.BooleanField(default=False)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ecommerceapp.productvariant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('display_name', models.CharField(max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('total_units_sold', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendors', to='ecommerceapp.store')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='ecommerceapp.vendor'),
        ),
        migrations.CreateModel(
            name='VideoTestimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('thumbnail', models.ImageField(upload_to=ecommerceapp.models._upload_videos)),
                ('video_file', models.FileField(blank=True, null=True, upload_to=ecommerceapp.models._upload_videos)),
                ('video_url', models.URLField(blank=True)),
                ('duration', models.CharField(blank=True, max_length=16)),
                ('is_active', models.BooleanField(default=True)),
                ('sort', models.PositiveIntegerField(db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'sort'], name='ecommerceap_is_acti_10352c_idx')],
            },
        ),
        migrations.CreateModel(
            name='VisitEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('method', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=512)),
                ('referer', models.CharField(blank=True, max_length=512)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wished_items', to='ecommerceapp.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerceapp.productvariant')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='ecommerceapp.wishlist')),
            ],
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['slug'], name='ecommerceap_slug_8af98c_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['is_published', 'published_at'], name='ecommerceap_is_publ_e0ea59_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blogpostversion',
            unique_together={('post', 'version')},
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='ecommerceap_slug_92e257_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job', 'status'], name='ecommerceap_job_id_fb3913_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'is_primary'], name='ecommerceap_product_b01308_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productoption',
            unique_together={('product', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='productoptionvalue',
            unique_together={('option', 'value')},
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['product', 'created_at'], name='ecommerceap_product_d08856_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productspecification',
            unique_together={('product', 'group', 'name')},
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['product', 'is_active'], name='ecommerceap_product_4dd0f5_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['weight_unit'], name='ecommerceap_weight__03d237_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'product', 'variant')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='ecommerceap_slug_5d5977_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-sold_count'], name='ecommerceap_sold_co_8c2aa7_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_published'], name='ecommerceap_is_publ_4870f6_idx'),
        ),
        migrations.AddIndex(
            model_name='visitevent',
            index=models.Index(fields=['created_at'], name='ecommerceap_created_0a2fd7_idx'),
        ),
        migrations.AddIndex(
            model_name='visitevent',
            index=models.Index(fields=['path'], name='ecommerceap_path_58f661_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['wishlist', 'product'], name='ecommerceap_wishlis_9470f4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlistitem',
            unique_together={('wishlist', 'product', 'variant')},
        ),
    ]
